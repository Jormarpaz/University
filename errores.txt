# Definir la función
handle_lists() {
    # Manejar la lista de procesos
        while read pid comando; do
            log_to_bible \"Revisando proceso \$pid en la lista de procesos.\"
            if [ -f \"./Infierno/\$pid\" ]; then
                log_to_bible \"El proceso \$pid está en el infierno. Terminando el proceso.\"
                kill_process_tree \$pid
                sed -i \"/\${pid}/d\" procesos
                rm -f ./Infierno/\$pid
                log_to_bible \"$(date +'%H:%M:%S'): El proceso \$pid '\$comando' ha terminado\"
            else
                if ! is_process_running \$pid; then
                    log_to_bible \"El proceso \$pid no está en ejecución. Eliminando de la lista.\"
                    sed -i \"/\$pid/d\" procesos
                    log_to_bible \"$(date +'%H:%M:%S'): El proceso \$pid '\$comando' ha terminado\"
                fi
            fi
        done < procesos

        # Manejar la lista de procesos de servicio
        while read pid comando; do
            log_to_bible \"Revisando proceso \$pid en la lista de procesos de servicio.\"
            if [ -f \"./Infierno/\$pid\" ]; then
                log_to_bible \"El proceso \$pid está en el infierno. Terminando el proceso.\"
                kill_process_tree \$pid
                sed -i \"/\${pid}/d\" procesos_servicio
                rm -f ./Infierno/\$pid
                log_to_bible \"$(date +'%H:%M:%S'): El servicio \$pid '\$comando' ha terminado\"
            else
                if ! is_process_running \$pid; then
                    log_to_bible \"El proceso \$pid no está en ejecución. Resucitando el proceso.\"
                    nohup bash -c \"\$comando\" >/dev/null 2>&1 &
                    new_pid=\$!
                    sed -i \"s/^\$pid /\$new_pid /\" procesos_servicio
                    log_to_bible \"$(date +'%H:%M:%S'): El proceso \$pid '\$comando' resucita con pid \$new_pid\"
                fi
            fi
        done < procesos_servicio

        # Manejar la lista de procesos periódicos
        while read contador periodo pid comando; do
            log_to_bible \"Revisando proceso \$pid en la lista de procesos periódicos.\"
            if [ -f \"./Infierno/\$pid\" ]; then
                log_to_bible \"El proceso \$pid está en el infierno. Terminando el proceso.\"
                kill_process_tree \$pid
                sed -i \"/\${pid}/d\" procesos_periodicos
                rm -f ./Infierno/\$pid
                log_to_bible \"$(date +'%H:%M:%S'): El proceso \$pid '\$comando' ha terminado\"
            else
                contador=\$((contador + 1))
                if ! is_process_running \$pid; then
                    if [ \$contador -ge \$periodo ]; then
                        log_to_bible \"El proceso \$pid no está en ejecución y ha alcanzado su periodo. Reencarnando el proceso.\"
                        nohup bash -c \"\$comando\" >/dev/null 2>&1 &
                        new_pid=\$!
                        sed -i \"s/^\$contador \$periodo \$pid /0 \$periodo \$new_pid /\" procesos_periodicos
                        log_to_bible \"$(date +'%H:%M:%S'): El proceso \$pid '\$comando' se ha reencarnado en el pid \$new_pid\"
                    else
                        sed -i \"s/^\$contador \$periodo \$pid /\$contador \$periodo \$pid /\" procesos_periodicos
                    fi
                else
                    sed -i \"s/^\$contador \$periodo \$pid /\$contador \$periodo \$pid /\" procesos_periodicos
                fi
            fi
        done < procesos_periodicos
}