#BlueJ class context
comment0.target=Logistica
comment0.text=\r\n\ Clase\ Logistica,\ alberga\ algunas\ funciones\ importantes\ como\ la\ de\ calcular\ el\ costo\ del\ envio\ logistico\ y\ las\ propias\ f\u00F3rmulas\ para\ peque\u00F1a\ o\ gran\ log\u00EDstica\r\n\ \r\n\ @author\ Jorge\r\n\ @version\ *17Mayo*\r\n
comment1.params=nombreEmpresa\ empresapeq\ empresagran
comment1.target=Logistica(java.lang.String,\ Transporte,\ Transporte)
comment1.text=\r\n\ Constructor\ para\ Logistica,\ se\ piden\ las\ caracter\u00EDsticas\ que\ incorporar\u00E1\ a\ futuro\ la\ empresa\ logistica\r\n
comment10.params=empresaG
comment10.target=void\ SetLogisticaG(Transporte)
comment10.text=\r\n\ Un\ setter\ para\ darle\ uan\ nueva\ logistica\ grande\r\n\r\n\ @param\ emrpesaP\ Para\ saber\ la\ logistica\ que\ queremos\ cambiar\r\n\ \r\n
comment11.params=
comment11.target=java.lang.String\ toString()
comment11.text=\r\n\ En\ la\ funci\u00F3n\ toString\ se\ crea\ una\ muestra\ de\ lo\ que\ aparecer\u00E1\ al\ pedir\ la\ logistica,\ en\ este\ caso,\ los\ datos\ de\ la\ empresa\r\n\r\n\ @return\ \ \ \ \ Una\ oraci\u00F3n\ donde\ se\ juntan\ todos\ los\ datos\ disponibles\ del\ productor\r\n
comment2.params=nombreEmpresa
comment2.target=Logistica(java.lang.String)
comment2.text=\r\n\ Constructor\ sobrecargado\ para\ Logistica\ donde\ solo\ se\ le\ pide\ el\ nombre\ de\ la\ empresa\ por\ si\ se\ quieren\ a\u00F1adir\ a\ posteriori\ los\ transportes\r\n
comment3.params=producto\ cliente
comment3.target=void\ Envio(Producto,\ Cliente)
comment3.text=\r\n\ Funcion\ void\ para\ calcular\ el\ valor\ del\ envio\ teniendo\ en\ cuenta\ factores\ como\ la\ distancia,\ la\ cantidad,\ el\ transporte...\r\n\r\n\ @param\ \ producto,cliente\ \ El\ producto\ que\ compra\ el\ cliente\ y\ este\ mismo\ para\ saber\ la\ distancia\ que\ lo\ separa\ de\ la\ cooperativa\r\n\ @return\ precioenvio\ El\ precio\ que\ queda\ despu\u00E9s\ de\ todos\ los\ c\u00E1lculos\r\n
comment4.params=cliente
comment4.target=double\ Peque\u00F1aLogistica(Cliente)
comment4.text=\r\n\ Peque\u00F1a\ funci\u00F3n\ para\ realizar\ los\ c\u00E1lculos\ de\ la\ peque\u00F1a\ log\u00EDstica,\ bas\u00E1ndose\ en\ precios\ y\ la\ cantidad\ de\ producto\ comprado\r\n\r\n\ @param\ \ cliente\ \ Quien\ compra\ el\ producto,\ de\ ahi\ se\ puede\ obtener\ cuanto\ y\ desde\ donde\ compra\r\n\ @return\ precio\ Precio\ resultante\ de\ la\ peque\u00F1a\ logistica\r\n
comment5.params=producto\ cliente
comment5.target=double\ GranLogistica(Producto,\ Cliente)
comment5.text=\r\n\ Peque\u00F1a\ funci\u00F3n\ para\ realizar\ los\ c\u00E1lculos\ de\ la\ gran\ log\u00EDstica,\ bas\u00E1ndose\ en\ precios\ y\ la\ cantidad\ de\ producto\ comprado\r\n\r\n\ @param\ \ cliente\ \ Quien\ compra\ el\ producto,\ de\ ahi\ se\ puede\ obtener\ cuanto\ y\ desde\ donde\ compra\r\n\ @return\ precio\ Precio\ resultante\ de\ la\ peque\u00F1a\ logistica\r\n
comment6.params=
comment6.target=java.lang.String\ GetNombre()
comment6.text=\r\n\ Funcion\ getter\ para\ obtener\ el\ nombre\r\n\ @return\ nombreEmpresa\ Se\ devuelve\ el\ nombre\ de\ la\ empresa\r\n
comment7.params=
comment7.target=double\ GetPrecioenvio()
comment7.text=\r\n\ Funcion\ getter\ para\ obtener\ el\ precio\ del\ envio\r\n\ @return\ precioenvio\ Se\ devuelve\ el\ precio\ del\ envio\ \r\n
comment8.params=nombre
comment8.target=void\ SetNombre(java.lang.String)
comment8.text=\r\n\ Un\ setter\ para\ darle\ un\ nuevo\ nombre\ a\ la\ empresa\ de\ logistica\r\n\r\n\ @param\ Nombre\ Para\ saber\ el\ nombre\ que\ se\ le\ quiere\ dar\ a\ la\ empresa\r\n\ \r\n
comment9.params=empresaP
comment9.target=void\ SetLogisticaP(Transporte)
comment9.text=\r\n\ Un\ setter\ para\ darle\ uan\ nueva\ logistica\ peque\u00F1a\r\n\r\n\ @param\ emrpesaP\ Para\ saber\ la\ logistica\ que\ queremos\ cambiar\r\n\ \r\n
numComments=12
