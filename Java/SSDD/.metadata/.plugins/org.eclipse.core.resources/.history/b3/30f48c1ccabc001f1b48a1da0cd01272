package es.uned.cliente;

import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.rmi.RemoteException;

public class ServicioDiscoClienteImpl implements ServicioDiscoClienteInterface {

	@Override
	public boolean subirArchivo(String rutaDestino, String basePath, byte[] contenido) throws RemoteException {
	    File archivoDestino = new File(basePath + File.separator + rutaDestino);
	    try {
	        // Verificar si el directorio padre existe, si no, crearlo
	        File directorioPadre = archivoDestino.getParentFile();
	        if (!directorioPadre.exists()) {
	            directorioPadre.mkdirs();
	        }

	        // Escribir el contenido en el archivo
	        Files.write(archivoDestino.toPath(), contenido);
	        System.out.println("Archivo subido con Ã©xito a: " + archivoDestino.getAbsolutePath());
	        return true;
	    } catch (IOException e) {
	        throw new RemoteException("Error al guardar el archivo: " + e.getMessage());
	    }
	}


	@Override
	public byte[] descargarArchivo(String rutaArchivo) throws RemoteException {
	    File file = new File(rutaArchivo);
	    try {
	        if (file.exists()) {
	            System.out.println("Descargando archivo desde: " + file.getAbsolutePath());
	            return Files.readAllBytes(file.toPath());
	        } else {
	            System.out.println("El archivo no existe: " + file.getAbsolutePath());
	            return null;
	        }
	    } catch (IOException e) {
	        System.out.println("Error al descargar el archivo: " + e.getMessage());
	        return null;
	    }
	}


	@Override
	public boolean borrarArchivo(String rutaArchivo) throws RemoteException {
	    File file = new File(rutaArchivo);  // Usar la ruta completa proporcionada
	    if (file.exists() && file.delete()) {
	        System.out.println("Archivo borrado exitosamente: " + file.getAbsolutePath());
	        return true;
	    } else {
	        System.out.println("No se pudo borrar el archivo: " + file.getAbsolutePath());
	        return false;
	    }
	}

}



