package es.uned.cliente;

import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;

public class ServicioDiscoClienteImpl implements ServicioDiscoClienteInterface {

    @Override
    public boolean subirArchivo(String url, String nombreArchivo, byte[] contenido) {
        File file = new File(url + "/" + nombreArchivo);
        try {
            // Verifica si el directorio existe, si no, lo crea
            Path path = file.getParentFile().toPath();
            if (!Files.exists(path)) {
                Files.createDirectories(path);
            }

            Files.write(file.toPath(), contenido);
            System.out.println("Archivo subido con Ã©xito a " + file.getAbsolutePath());
            return true;
        } catch (IOException e) {
            System.out.println("Error al subir el archivo: " + e.getMessage());
            return false;
        }
    }

    @Override
    public byte[] descargarArchivo(String url, String nombreArchivo) {
        File file = new File(url + "/" + nombreArchivo);
        try {
            if (file.exists()) {
                System.out.println("Descargando archivo desde: " + file.getAbsolutePath());
                return Files.readAllBytes(file.toPath());
            } else {
                System.out.println("El archivo no existe: " + file.getAbsolutePath());
                return null;
            }
        } catch (IOException e) {
            System.out.println("Error al descargar el archivo: " + e.getMessage());
            return null;
        }
    }

    @Override
    public boolean borrarArchivo(String url, String nombreArchivo) {
        File file = new File(url + "/" + nombreArchivo);
        if (file.exists() && file.delete()) {
            System.out.println("Archivo borrado exitosamente: " + file.getAbsolutePath());
            return true;
        } else {
            System.out.println("No se pudo borrar el archivo: " + file.getAbsolutePath());
            return false;
        }
    }
}



